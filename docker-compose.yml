version: '3'
services:
    db:
        hostname: db
        image: mysql:5
        command: --default-authentication-plugin=mysql_native_password
        # volumes:
        #     - ./data/mysql/data:/var/lib/mysql
        #     - ./data/mysql/conf:/etc/mysql/conf.d
        #     - ./data/mysql/initdb:/docker-entrypoint-initdb.d
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.labels.group == data]
        ports:
            - 3306:3306
        environment:
           MYSQL_DATABASE: starter
           MYSQL_ROOT_PASSWORD: root

    db_admin:
        image: adminer:latest
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.labels.group == data]
        ports:
            - 3006:8080
        depends_on:
            - db

    cache:
        hostname: cache
        image: redis:4
        command: redis-server --appendonly yes
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.labels.group == data]
        ports:
            - 6379:6379

    mq:
        hostname: mq
        image: webcenter/activemq:latest
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.labels.group == data]
        ports:
            - 61616:61616
            - 61613:61613
            - 8161:8161

    elasticsearch:
        hostname: elasticsearch
        image: elasticsearch:latest
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.labels.group == api]
        ports:
            - 9200:9200
            - 9300:9300

    logstash:
        hostname: logstash
        image: registry.cn-shanghai.aliyuncs.com/hellodock/logstash:latest
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.labels.group == api]
        ports:
            - 9600:9600
            - 9601:9601
        depends_on:
            - elasticsearch

    kibana:
        image: registry.cn-shanghai.aliyuncs.com/hellodock/kibana:latest
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.labels.group == api]
        ports:
            - 5601:5601
        depends_on:
            - elasticsearch

    grafana:
        image: grafana/grafana:latest
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.role == api]
        ports:
            - 3000:3000

    alertmanager:
        hostname: alertmanager
        image: registry.cn-shanghai.aliyuncs.com/hellodock/alertmanager:latest
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.role == api]
        ports:
            - 9093:9093
        depends_on:
            - api

    prometheus:
        image: registry.cn-shanghai.aliyuncs.com/hellodock/prometheus:latest
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.role == api]
        ports:
            - 9090:9090
        depends_on:
            - alertmanager
            - api

    api:
        hostname: api
        image: registry.cn-shanghai.aliyuncs.com/jext/starter_api:latest
        # volumes:
        #     - ./data/file:/tmp/file
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.role == api]
        ports:
            - 8011:8011
        depends_on:
            - db
            - cache
            - mq
            - logstash

    admin:
        image: registry.cn-shanghai.aliyuncs.com/jext/starter_admin:latest
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.role == api]
        ports:
            - 8010:8010
        depends_on:
            - api

    srv:
        image: registry.cn-shanghai.aliyuncs.com/jext/starter_service:latest
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.role == srv]
        ports:
            - 8001:8001
        depends_on:
          - cache
          - mq

    mq_consumer:
        image: registry.cn-shanghai.aliyuncs.com/jext/starter_service:latest
        command: python manage.py mq
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.role == srv]
        depends_on:
            - cache
            - mq

    task:
        image: registry.cn-shanghai.aliyuncs.com/jext/starter_service:latest
        command: celery -A starter_service worker -l info
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.role == srv]
        depends_on:
            - cache
            - mq

    task_viewer:
        image: registry.cn-shanghai.aliyuncs.com/jext/starter_service:latest
        command: celery flower --broker=redis://cache:6379/2
        deploy:
            replicas: 1
            # placement:
            #     constraints: [node.role == srv]
        ports:
            - 5555:5555
        depends_on:
            - task
